## To find installed docker version.
> docker version

## To view all configuration information.
> docker info

## To start a new container
> docker container run --publish 80:80 --name $randomName  --detach $imageName

--publish	    : it is used to publish this on 8080 host listening port and all traffic will be routed to port 80 of container. Host:Container format.
--name		    : It is used to provide specific name to this container instead of auto-generated name.
--detach	    : It is used to run this container in background as a process.  

## To view list of running containers
> docker container ls

## To stop a container.
> docker container stop $containerId

## To view list of all (including stopped) containers
> docker container ls -a

-a              : to view all containers.

## To view logs of a container
> docker container logs $containerName

## To remove multiple containers
> docker container rm -f $containerId1 $containerId2 $containerId3

-f			    : to forcefully remove a running container.
Note			: You cannot remove a running container.

## To view list of processes running inside a container
> docker container top $containerName

## To view metadata/config of a container
> docker container inspect $containerName

Note			: this commands returns json array with all configuration details of specified container. 

## To view live performance data of all container
> docker container stats

## To view live performance data of single container
> docker container stats $containerId

## To start a new interactive container
> docker container run -it $conatinerName $commands

-i			    : it is used to keep session open to receive user input
-t			    : it is used to allocate new terminal(similar to SSH).
$commands		: it is used to provide additional commands to this container.

Example		    : docker container run -it serene_curie bash

Note			: bash with -it will provide user a terminal inside a running container

## To start a stopped container.
> docker container start -ai $containerName

-a			    : it is used to attach output and error stream to the container
-i			    : it is used to keep session open to receive user input

## To run additional commands in existing(started) container
> docker container exec -it $conatinerName $commands

## To view configured port of a container
> docker container port $containerName

## To view list of created networks
> docker network ls

## To view network configurations and list of containers running on a network
> docker network inspect $networkName

## To create a new network
> docker network create $networkName

## To connect container to a network
> docker network connect $networkName $containerName

## To disconnect container from a network
> docker network disconnect $networkName $containerName
